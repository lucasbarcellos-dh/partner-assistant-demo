@use "sass:color";
@use "variables" as v;

// Responsive Breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == small {
    @media (max-width: v.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == medium {
    @media (max-width: v.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == large {
    @media (max-width: v.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xlarge {
    @media (max-width: v.$breakpoint-xl) {
      @content;
    }
  }
}

// Flexbox Layouts
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Transitions
@mixin transition($properties: all, $duration: v.$transition-medium, $timing: ease) {
  transition: $properties $duration $timing;
}

// Button Styles
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
}

@mixin icon-button($size: 40px, $color: v.$primary-color, $hover-color: v.$primary-color-dark) {
  @include button-reset;
  @include flex-center;
  width: $size;
  height: $size;
  border-radius: v.$border-radius-full;
  background-color: v.$background-white;
  border: 1px solid rgba($foreground-primary, 0.08);
  
  &:hover {
    border-color: rgba($foreground-primary, 0.16);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Box Shadows
@mixin card-shadow {
  box-shadow: v.$box-shadow-light;
}

@mixin card-shadow-hover {
  box-shadow: v.$box-shadow-branded;
}

// Container Styles
@mixin container {
  max-width: v.$container-max-width;
  margin: 0 auto;
  padding: 0 v.$content-padding;
}

// Animations
@mixin fade-in($duration: 0.3s, $delay: 0s) {
  animation: fadeIn $duration ease-in-out $delay;
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin slide-in($direction: 'up', $distance: v.$spacing-xlarge, $duration: 0.3s) {
  @if $direction == 'up' {
    animation: slideUp $duration ease-out;
    
    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY($distance);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  } @else if $direction == 'right' {
    animation: slideRight $duration ease-out;
    
    @keyframes slideRight {
      from {
        opacity: 0;
        transform: translateX(-$distance);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  }
}

// Typography
@mixin heading-1 {
  font-size: v.$font-size-xxlarge;
  font-weight: 600;
  line-height: 1.2;
}

@mixin heading-2 {
  font-size: v.$font-size-xlarge;
  font-weight: 600;
  line-height: 1.3;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Cards & Containers
@mixin card {
  background-color: v.$background-white;
  border-radius: v.$border-radius-sm;
  padding: v.$spacing-2xlarge;
  @include card-shadow;
}

// Input Styles
@mixin form-input {
  width: 100%;
  padding: v.$spacing-large v.$spacing-xlarge;
  border: none;
  border-radius: v.$spacing-xlarge;
  font-size: v.$spacing-xlarge;
  line-height: v.$line-height-base;
  font-family: v.$font-family-main;
  outline: none;
  background-color: v.$background-white;
  @include transition(border-color);

  &::placeholder {
    color: v.$foreground-branded-disabled;
  }
  
  &:focus {
    @include card-shadow-hover;
  }
}

@mixin branded-gradient {
  background: linear-gradient(
    color.adjust(v.$primary-color, $hue: -22deg),
    rgba(v.$primary-color),
    color.adjust(v.$primary-color, $hue: +22deg)
  );
}