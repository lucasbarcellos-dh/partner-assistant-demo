@use "sass:color";
@use "../styles/variables" as v;
@use "../styles/mixins" as m;
@use './chat/ChatHeader';
@use './chat/MessageList';
@use './chat/ChatInput';
@use './chat/QuestionChips';
@use './chat/FormattedMessageContent';

// Keyframes for animations
@keyframes message-fade-in {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes blink {
  50% { opacity: 1; }
}

// Main ChatDrawer component
.chat-drawer {
  position: fixed;
  top: 0;
  right: - v.$drawer-width;
  width: v.$drawer-width;
  height: 100vh;
  background-color: v.$background-white;
  @include m.transition(right, v.$transition-medium, cubic-bezier(0, 0, 0.2, 1));
  @include m.flex-column;
  z-index: v.$z-index-drawer;
  border-radius: v.$border-radius-lg 0 0 32px;
  
  &.open {
    right: 0;
  }
  
  // Apply gradient when in initial state
  &.initial-state {
    background-color: #fff;
    background-image:
      linear-gradient(
        rgba(rgba(255,255,255), 0),
        rgba(rgba(255,255,255), 1),
      ),
      linear-gradient(
        rgba(color.adjust(v.$primary-color, $hue: -33deg, $saturation: 100%), 0.04),
        rgba(v.$primary-color, 0.04),
        rgba(color.adjust(v.$primary-color, $hue: +33deg, $saturation: 100%), 0.04),
      );
    @include m.transition(all, v.$transition-medium, cubic-bezier(0, 0, 0.2, 1));
  }
  
  @include m.respond-to(medium) {
    border-radius: 0;
    width: 100%;
    right: -100%;
  }
}

.chat-drawer:not(.open) .input-container {
  display: none;
}

// Chat Container Styles
.chat-container {
  flex: 1;
  @include m.flex-column;
  overflow: hidden;
  position: relative;
  @include m.transition(all, v.$transition-medium);
  
  // Centered input state (initial)
  &.centered-input {
    justify-content: center;
    padding-top: 0;
    
    .messages-container {
      display: none;
    }
    
    .input-container {
      position: relative;
      @include m.flex-column;
      align-items: center;
      margin: 0 48px;
      padding-bottom: 30%;
    }
    
    .welcome-section {
      @include m.flex-column;
      align-items: center;
    }
    
    .welcome-text {
      text-align: center;
      font-size: 18px;
      color: v.$text-branded-secondary;
      line-height: v.$line-height-base;
      margin-bottom: v.$spacing-xl;
      @include m.slide-in('up', 20px, 0.5s);
    }
    
    .input-wrapper {
      @include m.slide-in('up', 20px, 0.5s);
    }
    
    // Apply branded shadow in initial state
    .input-wrapper .chat-textarea {
      box-shadow: v.$box-shadow-branded;
      border: none;
    }
  }
  
  // Bottom input state (after interaction)
  &.bottom-input {
    justify-content: space-between;
    @include m.slide-in('up', 20px, 0.3s);
    position: relative;
    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: auto;
      right: 0;
      width: v.$drawer-width;
      height: 148px;
      background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0),
        rgba(255, 255, 255, 0.9) 33%,
        rgba(255, 255, 255, 1)
      );
      pointer-events: none;
      z-index: 1;
      border-bottom-left-radius: 32px;
      
      @include m.respond-to(medium) {
        width: 100%; // Full width on mobile
      }
    }
    
    .messages-container {
      flex: 1;
      overflow-y: auto;
      padding: 16px v.$spacing-xl 112px;
      display: block;
      position: relative;
    }
    
    .input-container {
      position: absolute;
      bottom: 0;
      left: auto;
      right: 0;
      width: v.$drawer-width;
      padding: v.$spacing-lg;  
      z-index: 2;
      @include m.respond-to(medium) {
        width: 100%;
      }
    }
    
    // Apply subtle border after interaction
    .input-wrapper .chat-textarea {
      box-shadow: none;
      border: 1px solid v.$border-light;
      font-size: 18px;
      background-color: white; // Ensure input has solid background
      &::placeholder {
        color: rgba(v.$text-primary, 0.37);
      }
    }
  }
}

.welcome-section {
  width: 100%;
}

// Centered Icon
.centered-icon {
  display: flex;
  justify-content: center;
  margin-bottom: v.$spacing-xl;
  animation: message-fade-in 0.5s ease-out;
  
  // Apply gradient to centered sparkle icon
  svg {
    path, circle {
      fill: url(#brandedGradient);
    }
  }
}

// Centered Title
.centered-title {
  font-size: v.$font-size-xxlarge;
  letter-spacing: -0.5px;
  font-weight: 700;
  margin: 0 0 12px 0;
  text-align: center;
  color: transparent;  // Make text color transparent to show gradient
  background: linear-gradient(
    225deg,
    color.adjust(v.$primary-color, $hue: +20deg, $saturation: 70%),
    v.$primary-color,
    color.adjust(v.$primary-color, $hue: -20deg, $saturation: 70%)
  );
  -webkit-background-clip: text;
  background-clip: text;
  width: 100%;
  opacity: 1;
  @include m.transition(opacity);
  @include m.slide-in('up', 20px, 0.5s);
}

// Welcome Text 
.welcome-text {
  @include m.transition(opacity);
}

// Input Container
.input-container {
  @include m.transition(all, v.$transition-medium);
}