@import '../styles/variables';
@import '../styles/mixins';

// Keyframes for animations
@keyframes message-fade-in {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes blink {
  50% {
    opacity: 1;
  }
}

// ChatDrawer Component
.chat-drawer {
  position: fixed;
  top: 0;
  right: -$drawer-width;
  width: $drawer-width;
  height: 100vh;
  background-color: $background-white;
  @include transition(right, $transition-medium, cubic-bezier(0, 0, 0.2, 1));
  @include flex-column;
  z-index: $z-index-drawer;
  border-radius: $border-radius-lg 0 0 44px;
  
  &.open {
    right: 0;
  }
  
  // Apply gradient when in initial state
  &.initial-state {
    background-color: #fff;
    background-image:
    linear-gradient(
      rgba(rgba(255,255,255), 0),
      rgba(rgba(255,255,255), 1),
    ),
    linear-gradient(
      rgba(adjust-color($primary-color, $hue: -33deg, $saturation: 100%), 0.04),
      rgba($primary-color, 0.04),
      rgba(adjust-color($primary-color, $hue: +33deg, $saturation: 100%), 0.04),
    );
    // Add transition for smooth fade out
    @include transition(all, $transition-medium, cubic-bezier(0, 0, 0.2, 1));
  }
  
  @include respond-to(medium) {
    border-radius: 0;
    width: 100%;
    right: -100%;
  }
}

// Header Section
.chat-header {
  padding: $spacing-lg $spacing-xl;
  @include flex-between;
  z-index: 2;
  @include transition((opacity, transform), $transition-medium);
  
  .header-title,
  .reset-button {
    &.hidden {
      display: none;
    }
  }
  
  .header-title {
    display: flex;
    align-items: center;
    gap: $spacing-md;
    
    h1 {
      font-size: $font-size-large;
      margin: 0;
    }
    
    // Apply gradient to sparkle icon in header
    svg {
      path, circle {
        fill: url(#headerGradient);
      }
    }
  }
  
  .header-actions {
    display: flex;
    gap: $spacing-sm;
    margin-left: auto; // Push to the right
  }
  
  .reset-button,
  .close-button {
    @include button-reset;
    width: 32px;
    height: 32px;
    border-radius: $border-radius-full;
    @include flex-center;
    color: $text-primary;
    .material-symbols-rounded {
      font-size: 24px;
    }
  }
}

// Centered Icon
.centered-icon {
  display: flex;
  justify-content: center;
  margin-bottom: $spacing-xl;
  animation: message-fade-in 0.5s ease-out;
  // Apply gradient to centered sparkle icon
  svg {
    path, circle {
      fill: url(#brandedGradient);
    }
  }
}

// Centered Title
.centered-title {
  font-size: $font-size-xxlarge;
  letter-spacing: -0.5px;
  font-weight: 700;
  margin: 0 0 $spacing-md 0;
  text-align: center;
  color: transparent;  // Make text color transparent to show gradient
  background: linear-gradient(
    225deg,
    adjust-color($primary-color, $hue: +20deg, $saturation: 70%),
    $primary-color,
    adjust-color($primary-color, $hue: -20deg, $saturation: 70%)
  );
  -webkit-background-clip: text;
  background-clip: text;
  width: 100%;
  opacity: 1;
  @include transition(opacity);
  @include slide-in('up', 20px, 0.5s);
}

// Chat Container
.chat-container {
  flex: 1;
  @include flex-column;
  overflow: hidden;
  position: relative;
  @include transition(all, $transition-medium);
  
  // Centered input state
  &.centered-input {
    justify-content: center;
    padding-top: 0;
    
    .messages-container {
      display: none;
    }
    
    .input-container {
      position: relative;
      @include flex-column;
      align-items: center;
      // width: 90%;
      margin: 0 48px;
      padding-bottom: 33%;
    }
    
    .welcome-text {
      text-align: center;
      font-size: $font-size-base;
      color: $text-branded-primary;
      line-height: $line-height-base;
      margin-bottom: $spacing-xl;
      @include slide-in('up', 20px, 0.5s);
    }
    
    .input-wrapper {
      @include slide-in('up', 20px, 0.5s);
    }
    
    // Apply branded shadow only in initial state
    .input-wrapper input {
      box-shadow: $box-shadow-branded;
      border: none;
      color: $text-primary;
    }
  }
  
  // Bottom input state (after interaction)
  &.bottom-input {
    justify-content: space-between;
    @include slide-in('up', 20px, 0.3s);
    
    .messages-container {
      flex: 1;
      overflow-y: auto;
      padding: $spacing-xl;
      display: block;
    }
    
    .input-container {
      position: relative;
      padding: $spacing-lg;
      display: flex;
      flex-direction: row;
      width: 100%;
    }
    
    // Apply subtle border after interaction
    .input-wrapper input {
      box-shadow: none;
      border: 1px solid $border-light;
      &::placeholder {
        color: rgba($text-primary, 0.37);
      }
    }
  }
}

// Welcome Text
.welcome-text {
  @include transition(opacity);
}

// Messages Container
.messages-container {
  @include transition(all, $transition-medium);
}

// Message Component
.message {
  margin-bottom: $spacing-md;
  display: flex;
  animation: message-fade-in 0.3s ease;
  
  &.user {
    justify-content: flex-end;
  }
  
  .message-content {
    max-width: 70%;
    padding: 12px 20px;
    border-radius: $border-radius-md;
    line-height: $line-height-base;
  }
  
  &.user .message-content {
    font-weight: 600;
    background: linear-gradient(
      225deg,
      adjust-color($primary-color, $hue: -8deg),
      $primary-color,
    );
    color: $background-white;
    border-radius: $border-radius-md $border-radius-md 0 $border-radius-md;
  }
  
  &.assistant .message-content {
    background-color: $message-assistant-bg;
    color: $text-primary;
    border-radius: $border-radius-md $border-radius-md $border-radius-md 0;
  }
  
  @include respond-to(medium) {
    .message-content {
      max-width: 85%;
    }
  }
}

// Formatted Message Content
.formatted-content {
  width: 100%;
  
  p {
    margin-bottom: $spacing-sm;
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  .list-item {
    margin-bottom: 4px;
    margin-left: 0;
  }
  
  .paragraph {
    margin-bottom: $spacing-sm;
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  strong {
    font-weight: 600;
  }
}

// Input Container
.input-container {
  @include transition(all, $transition-medium);
}

// Input Wrapper
.input-wrapper {
  position: relative;
  flex: 1;
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
}

// Text Input
.input-container input {
  @include form-input;
  padding-right: 48px; // Make room for the button
  font-size: 20px;
  @include transition(all, $transition-fast);
}

// Send Button
.send-button {
  position: absolute;
  right: 12px;
  width: 40px;
  height: 40px;
  border: none;
  border-radius: $border-radius-full;
  @include flex-center;
  cursor: pointer;
  @include transition((background-color, transform), $transition-fast);
  
  // Apply gradient to the send button
  background: linear-gradient(
    225deg,
    adjust-color($primary-color, $hue: +20deg, $saturation: 70%),
    $primary-color,
    adjust-color($primary-color, $hue: -20deg, $saturation: 70%)
  );
  color: $background-white;
  
  &:active {
    transform: scale(0.95);
  }
  
  &:disabled {
    background: $primary-color-dark;
    cursor: not-allowed;
  }
  
  .material-symbols-rounded {
    font-size: 24px;
  }
}

// Typing Indicator
.typing-indicator {
  @include flex-center;
  
  span {
    height: 6px;
    width: 6px;
    margin: 0 1px;
    background-color: $background-white;
    border-radius: $border-radius-full;
    display: inline-block;
    opacity: 0.7;
  }
  
  // Message typing indicator
  .message & span {
    height: 8px;
    width: 8px;
    background-color: #888;
    opacity: 0.4;
  }
  
  span:nth-of-type(1) {
    animation: blink 1s infinite 0.1s;
  }
  
  span:nth-of-type(2) {
    animation: blink 1s infinite 0.3s;
  }
  
  span:nth-of-type(3) {
    animation: blink 1s infinite 0.5s;
  }
}

// Question Chips Container and Subtitle
.question-chips-container {
  width: 100%;
  padding: 0 $spacing-sm;
  
  // Container animation in the initial state
  .centered-input & {
    margin-top: $spacing-lg;
    @include slide-in('up', 20px, 0.6s);
  }
  
  // Less padding in conversation state to align with messages
  .bottom-input & {
    padding: 0 $spacing-lg;
  }
}

.chips-subtitle {
  font-size: $font-size-small;
  color: $text-branded-secondary;
  margin-bottom: $spacing-xs;
  text-align: left;
  
  // Style differences in different states
  .centered-input & {
    margin-bottom: $spacing-sm;
  }
  
  .bottom-input & {
    font-size: 11px;
    margin-top: $spacing-xs;
  }
}

// Question Chips - grid layout
.question-chips {
  display: flex;
  flex-wrap: wrap;
  gap: $spacing-sm;
  padding: $spacing-xs 0 $spacing-md;
  width: 100%;
  justify-content: flex-start; // Left alignment
  
  // Grid behavior is handled by flex-wrap: wrap
  
  // Styles for initial state
  .centered-input & {
    max-width: 100%;
  }
  
  // Make chips compact in bottom-input state
  .bottom-input & {
    padding: 0 0 $spacing-md;
    margin-top: 0;
  }
}

.question-chip {
  @include button-reset;
  color: $text-branded-secondary;
  padding: 4px 12px;
  border-radius: 12px;
  font-size: $font-size-medium;
  line-height: 1.5;
  border: 1.5px solid rgba($primary-color, 0.12);
  white-space: nowrap;
  transition: all $transition-fast ease;
  box-shadow: none;
  
  &:hover {
    border-color: 1.5px solid rgba($primary-color, 0.24);
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    &:hover {
      transform: none;
      box-shadow: none;
      background-color: $background-light;
      border-color: $border-light;
    }
  }
  
  // Apply different styling when in initial state
  .centered-input & {
    &:hover {
      border-color: rgba($primary-color, 0.2);
    }
  }
  
  // Apply more modest styling when in bottom state
  .bottom-input & {
    background-color: $background-light;
    box-shadow: none;
    font-size: 12px;
    padding: 4px 12px;
  }
  
  // Responsive styles
  @include respond-to(medium) {
    font-size: 11px;
    padding: 3px 10px;
    
    .centered-input & {
      padding: 6px 12px;
      font-size: 13px;
    }
  }
}

// Update input-container for new chips layout
.input-container {
  @include transition(all, $transition-medium);
  
  // Adjust padding when in bottom-input state to make room for chips
  &.bottom-input & {
    padding-bottom: $spacing-sm;
  }
}